import unittest
from traits.etsconfig.etsconfig import ETSConfig as ETSConfig, ETSToolkitError as ETSToolkitError
from typing import Any, Optional

def temporary_directory() -> None: ...
def restore_mapping_entry(mapping: Any, key: Any) -> None: ...
def temporary_home_directory() -> None: ...
def mock_sys_argv(args: Any) -> None: ...
def mock_os_environ(args: Any) -> None: ...

class ETSConfigTestCase(unittest.TestCase):
    ETSConfig: Any = ...
    def setUp(self) -> None: ...
    def run(self, result: Optional[Any] = ...) -> None: ...
    def test_application_data(self) -> None: ...
    def test_set_application_data(self) -> None: ...
    def test_application_data_is_idempotent(self) -> None: ...
    def test_write_to_application_data_directory(self) -> None: ...
    def test_default_company(self) -> None: ...
    def test_set_company(self) -> None: ...
    def test_toolkit_environ(self) -> None: ...
    def test_toolkit_environ_missing(self) -> None: ...
    def test_set_toolkit(self) -> None: ...
    def test_provisional_toolkit(self) -> None: ...
    def test_provisional_toolkit_exception(self) -> None: ...
    def test_provisional_toolkit_already_set(self) -> None: ...
    def test_user_data(self) -> None: ...
    def test_set_user_data(self) -> None: ...
    def test_user_data_is_idempotent(self) -> None: ...
    def test_write_to_user_data_directory(self) -> None: ...
