from abc import ABC
from traits.adaptation.api import PurePythonAdapter as Adapter
from typing import Any

class UKStandard(ABC): ...
class EUStandard(ABC): ...
class JapanStandard(ABC): ...
class IraqStandard(ABC): ...
class UKPlug: ...
class EUPlug: ...
class JapanPlug: ...
class IraqPlug: ...

class TravelPlug:
    mode: Any = ...
    def __init__(self, mode: Any) -> None: ...

class UKStandardToEUStandard(Adapter): ...
class EUStandardToJapanStandard(Adapter): ...
class JapanStandardToIraqStandard(Adapter): ...
class EUStandardToIraqStandard(Adapter): ...
class UKStandardToJapanStandard(Adapter): ...
class TravelPlugToJapanStandard(Adapter): ...
class TravelPlugToEUStandard(Adapter): ...
class FileType: ...
class IEditor(ABC): ...
class IScriptable(ABC): ...
class IUndoable(ABC): ...
class FileTypeToIEditor(Adapter): ...
class IScriptableToIUndoable(Adapter): ...
class IPrintable(ABC): ...
class Editor: ...
class TextEditor(Editor): ...
class EditorToIPrintable(Adapter): ...
class TextEditorToIPrintable(Adapter): ...
class IPrimate(ABC): ...
class IHuman(IPrimate): ...
class IChild(IHuman): ...
class IIntermediate(ABC): ...
class ITarget(ABC): ...
class Source: ...
class IChildToIIntermediate(Adapter): ...
class IHumanToIIntermediate(Adapter): ...
class IPrimateToIIntermediate(Adapter): ...
class IIntermediateToITarget(Adapter): ...
class IStart(ABC): ...
class IGeneric(ABC): ...
class ISpecific(IGeneric): ...
class IEnd(ABC): ...
class Start: ...
class IStartToISpecific(Adapter): ...
class IGenericToIEnd(Adapter): ...
