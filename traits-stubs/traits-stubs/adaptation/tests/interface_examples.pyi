from traits.api import Adapter as Adapter, Enum as Enum, HasTraits as HasTraits, Interface as Interface, provides as provides
from typing import Any

class UKStandard(Interface): ...
class EUStandard(Interface): ...
class JapanStandard(Interface): ...
class IraqStandard(Interface): ...
class UKPlug(HasTraits): ...
class EUPlug(HasTraits): ...
class JapanPlug(HasTraits): ...
class IraqPlug(HasTraits): ...

class TravelPlug(HasTraits):
    mode: Any = ...

class UKStandardToEUStandard(Adapter): ...
class EUStandardToJapanStandard(Adapter): ...
class JapanStandardToIraqStandard(Adapter): ...
class EUStandardToIraqStandard(Adapter): ...
class UKStandardToJapanStandard(Adapter): ...
class TravelPlugToJapanStandard(Adapter): ...
class TravelPlugToEUStandard(Adapter): ...
class FileType(HasTraits): ...
class IEditor(Interface): ...
class IScriptable(Interface): ...
class IUndoable(Interface): ...
class FileTypeToIEditor(Adapter): ...
class IScriptableToIUndoable(Adapter): ...
class IPrintable(Interface): ...
class Editor(HasTraits): ...
class TextEditor(Editor): ...
class EditorToIPrintable(Adapter): ...
class TextEditorToIPrintable(Adapter): ...
class IPrimate(Interface): ...
class IHuman(IPrimate): ...
class IChild(IHuman): ...
class IIntermediate(Interface): ...
class ITarget(Interface): ...
class Source(HasTraits): ...
class IChildToIIntermediate(Adapter): ...
class IHumanToIIntermediate(Adapter): ...
class IPrimateToIIntermediate(Adapter): ...
class IIntermediateToITarget(Adapter): ...
class IStart(Interface): ...
class IGeneric(Interface): ...
class ISpecific(IGeneric): ...
class IEnd(Interface): ...
class Start(HasTraits): ...
class IStartToISpecific(Adapter): ...
class IGenericToIEnd(Adapter): ...
