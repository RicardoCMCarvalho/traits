import unittest
from traits.api import ArrayOrNone as ArrayOrNone, ComparisonMode as ComparisonMode, HasTraits as HasTraits, TraitError as TraitError
from traits.testing.optional_dependencies import numpy as numpy, requires_numpy as requires_numpy
from traits.testing.unittest_tools import UnittestTools as UnittestTools
from typing import Any

class Foo(HasTraits):
    maybe_array: Any = ...
    maybe_float_array: Any = ...
    maybe_two_d_array: Any = ...
    maybe_array_with_default: Any = ...
    maybe_array_no_compare: Any = ...

class TestArrayOrNone(unittest.TestCase, UnittestTools):
    def test_default(self) -> None: ...
    def test_explicit_default(self) -> None: ...
    def test_default_validation(self) -> None: ...
    def test_setting_array_from_array(self) -> None: ...
    def test_setting_array_from_list(self) -> None: ...
    def test_setting_array_from_none(self) -> None: ...
    def test_dtype(self) -> None: ...
    def test_shape(self) -> None: ...
    def test_change_notifications(self) -> None: ...
    def test_comparison_mode_override(self) -> None: ...
    def test_default_value_copied(self) -> None: ...
