import unittest
from traits import trait_notifiers as trait_notifiers
from traits.api import Float as Float, HasTraits as HasTraits, List as List
from typing import Any

calls_0: Any

class StaticNotifiers0(HasTraits):
    ok: Any = ...
    fail: Any = ...

class StaticNotifiers1(HasTraits):
    ok: Any = ...
    fail: Any = ...

class StaticNotifiers2(HasTraits):
    ok: Any = ...
    fail: Any = ...

class StaticNotifiers3(HasTraits):
    ok: Any = ...
    fail: Any = ...

class StaticNotifiers4(HasTraits):
    ok: Any = ...
    fail: Any = ...

class _LeadingUnderscore(HasTraits):
    calls: Any = ...

class TestNotifiers(unittest.TestCase):
    exceptions: Any = ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def test_static_notifiers_0(self) -> None: ...
    def test_static_notifiers_1(self) -> None: ...
    def test_static_notifiers_2(self) -> None: ...
    def test_static_notifiers_3(self) -> None: ...
    def test_static_notifiers_4(self) -> None: ...
    def test_leading_underscore(self) -> None: ...
