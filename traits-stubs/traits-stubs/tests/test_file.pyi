import unittest
from traits.api import File as File, HasTraits as HasTraits, TraitError as TraitError
from traits.testing.optional_dependencies import requires_traitsui as requires_traitsui
from typing import Any

class ExampleModel(HasTraits):
    file_name: Any = ...

class FastExampleModel(HasTraits):
    file_name: Any = ...

class FileTestCase(unittest.TestCase):
    def test_valid_file(self) -> None: ...
    def test_valid_pathlike_file(self) -> None: ...
    def test_invalid_file(self) -> None: ...
    def test_invalid_pathlike_file(self) -> None: ...
    def test_directory(self) -> None: ...
    def test_pathlike_directory(self) -> None: ...
    def test_invalid_type(self) -> None: ...
    def test_fast(self) -> None: ...

class TestCreateEditor(unittest.TestCase):
    def test_exists_controls_editor_dialog_style(self) -> None: ...
