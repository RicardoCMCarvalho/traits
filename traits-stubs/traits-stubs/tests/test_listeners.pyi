import unittest
from traits.api import Any as Any, Event as Event, Float as Float, HasTraits as HasTraits, Int as Int, Str as Str, pop_exception_handler as pop_exception_handler, push_exception_handler as push_exception_handler

def captured_stderr() -> None: ...

class GenerateEvents(HasTraits):
    name: Any = ...
    age: Any = ...
    weight: Any = ...

events: Any

class ListenEvents(HasTraits):
    def alt_name_changed(self, object: Any, name: Any, old: Any, new: Any) -> None: ...
    def alt_weight_changed(self, object: Any, name: Any, old: Any, new: Any) -> None: ...

class GenerateFailingEvents(HasTraits):
    name: Any = ...

class TestListeners(unittest.TestCase):
    def test_listeners(self) -> None: ...
    def test_trait_exception_handler_can_access_exception(self) -> None: ...

class A(HasTraits):
    exception: Any = ...
    foo: Any = ...
    def foo_changed_handler(self) -> None: ...

def foo_writer(a: Any, stop_event: Any) -> None: ...

class TestRaceCondition(unittest.TestCase):
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def test_listener_thread_safety(self) -> None: ...
    def test_listener_deleted_race(self) -> None: ...
