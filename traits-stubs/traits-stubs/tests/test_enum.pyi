import enum
import unittest
from traits.api import Any as Any, Enum as Enum, HasTraits as HasTraits, List as List, Property as Property, TraitError as TraitError

class FooEnum(enum.Enum):
    foo: int = ...
    bar: int = ...
    baz: int = ...

class OtherEnum(enum.Enum):
    one: int = ...
    two: int = ...
    three: int = ...

class ExampleModel(HasTraits):
    valid_models: Any = ...
    root: Any = ...

class EnumListExample(HasTraits):
    values: Any = ...
    value: Any = ...
    value_default: Any = ...
    value_name: Any = ...
    value_name_default: Any = ...

class EnumTupleExample(HasTraits):
    values: Any = ...
    value: Any = ...
    value_default: Any = ...
    value_name: Any = ...
    value_name_default: Any = ...

class EnumEnumExample(HasTraits):
    values: Any = ...
    value: Any = ...
    value_default: Any = ...
    value_name: Any = ...
    value_name_default: Any = ...

class EnumTestCase(unittest.TestCase):
    def test_valid_enum(self) -> None: ...
    def test_invalid_enum(self) -> None: ...
    def test_enum_list(self) -> None: ...
    def test_enum_tuple(self) -> None: ...
    def test_enum_enum(self) -> None: ...
