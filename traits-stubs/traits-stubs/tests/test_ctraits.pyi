import unittest
from traits.constants import ComparisonMode as ComparisonMode, DefaultValue as DefaultValue, MAXIMUM_DEFAULT_VALUE_TYPE as MAXIMUM_DEFAULT_VALUE_TYPE, TraitKind as TraitKind
from traits.ctrait import CTrait as CTrait
from traits.trait_types import Any as Any

def getter(): ...
def setter(value: Any) -> None: ...
def validator(value: Any): ...

class TestCTrait(unittest.TestCase):
    def test_initial_default_value(self) -> None: ...
    def test_set_and_get_default_value(self) -> None: ...
    def test_default_value_for_set_is_deprecated(self) -> None: ...
    def test_bad_default_value_type(self) -> None: ...
    def test_is_property(self) -> None: ...
    def test_modify_delegate(self) -> None: ...
    def test_setattr_original_value(self) -> None: ...
    def test_post_setattr_original_value(self) -> None: ...
    def test_is_mapped(self) -> None: ...
    def test_default_comparison_mode(self) -> None: ...
    def test_invalid_comparison_mode(self) -> None: ...
    def test_comparison_mode_unchanged_if_invalid(self) -> None: ...
    def test_comparison_mode_int(self) -> None: ...
    def test_comparison_mode_enum(self) -> None: ...
    def test_unsafe_set_value(self) -> None: ...
